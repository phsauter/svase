# Copyright (c) 2022 ETH Zurich and University of Bologna.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

# Author:  Philippe Sauter <phsauter@ethz.ch>

name: Build & Test

on:
  push:
  workflow_dispatch:

jobs:
  save-submodule-hashes:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Check if .gitmodules exists
      run: |
        if [ -e .gitmodules ]; then
          echo "Submodules found..."
        else
          echo "No submodules, this should not be run"
          exit 1
        fi

    - name: Generate File
      run: |
        .github/save_submodules.sh

    # bot details: https://github.com/orgs/community/discussions/26560#discussioncomment-3531273
    - name: Commit and Push Changes
      if: success()
      run: |
        if [ git diff --exit-code .github/.submodules_generated ]; then
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add .github/.submodules_generated
          git commit -m "ci: update submodule commit hashes"
          git push
        fi

  build:
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: Release
    needs: save-submodule-hashes
    strategy:
      matrix:
        os: ['alpine:3.19']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Restore dependencies from cache
      uses: actions/cache@v4
      with:
        path: |
          deps
        key: |
          ${{matrix.os}}-deps-all-${{ hashFiles('.github/.submodules_generated') }}
        restore-keys: |
          ${{matrix.os}}-deps-all-

    - name: Build OS
      shell: bash
      run: |
        export BASE_IMG=${{matrix.os}}
        docker build .github/docker -t svase-builder

    - name: Build SVase
      shell: bash
      run: |
        export GID=$(id -g)
        export REPO_PATH=${{github.workspace}}/
        export CMAKE_BUILD_PORTABLE=1
        docker-compose -f .github/docker/docker-compose.yml up

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
        key: |
          ${{matrix.os}}-deps-all-${{ hashFiles('.github/.submodules_generated') }}

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: svase-linux_${{github.run_number}}
        path: ${{github.workspace}}/build/svase


  build-macos:
    runs-on: macos-latest
    needs: save-submodule-hashes

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Restore dependencies from cache
      uses: actions/cache@v4
      with:
        path: |
          deps
        key: |
          ${{runner.os}}-deps-all-${{ hashFiles('.github/.submodules_generated') }}
        restore-keys: |
          ${{runner.os}}-deps-all-

    - name: Build SVase
      shell: bash
      run: |
        export CXX=gcc-13
        make release -j

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
        key: |
          ${{runner.os}}-deps-all-${{ hashFiles('.github/.submodules_generated') }}

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: svase-macos_${{github.run_number}}
        path: ${{github.workspace}}/build/svase


  tests:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        os:
        - debian:12
        - debian:11
        - debian:10
        - almalinux:9.0
        - almalinux:8.7
        - centos:7.4.1708

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: svase-linux_${{github.run_number}}
        path: build

    - name: Generate test script
      run: |
        cd test
        make --dry-run simple-tests > test_script.sh
        chmod +x test_script.sh
        cd ..

    - name: Build and run tests
      run: |
        docker run --rm -v $(pwd):/svase ${{matrix.os}} sh -c 'chmod+x build/svase && cd /svase/test && ./test_script.sh'


  tests-macos:
    runs-on: macos-latest
    needs: build-macos

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: svase-macos_${{github.run_number}}
        path: build

    - name: Run tests
      run: |
        cd test
        make simple-tests

